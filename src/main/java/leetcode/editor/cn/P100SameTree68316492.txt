
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        /**
         * 迭代的方案
         *
         * @param p
         * @param q
         * @return
         */
        public boolean isSameTree(TreeNode p, TreeNode q) {
            Stack<TreeNode> stack = new Stack<>();
            TreeNode pCur = p;
            TreeNode qCur = q;
            stack.push(pCur);
            stack.push(qCur);
            while (!stack.isEmpty()) {
                pCur = stack.pop();
                qCur = stack.pop();
                //
                if (qCur == null && pCur == null) {
                    continue;
                }
                // 当前p，q均不为空且两个值相等，才会入栈
                //不相等情况： 一个为空，一个不为空；两个值不相等
                if (qCur != null && pCur != null && qCur.val == pCur.val) {
                    stack.push(p.left);
                    stack.push(q.left);
                    stack.push(p.right);
                    stack.push(q.right);
                } else {
                    return false;
                }
            }
            return true;
        }
    }

//runtime:N/A
//memory:N/A
//total_testcases:57
//total_correct:0
//input_formatted:
//expected_output:
//code_output:null
//runtime_error:null
//last_testcase:[1,2,3] [1,2,3]
