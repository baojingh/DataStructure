    class Solution {
        public int[] searchRange(int[] nums, int target) {
            int left = leftBound(nums, target);
            int right = rightBound(nums, target);
            int[] arr = new int[]{left, right};
            return arr;
        }

        /**
         * 寻找左边界，即使找到了目标值，也要判断一下是否是最左边的值或者左边的值
         *
         * @param nums
         * @param target
         * @return
         */
        private int leftBound(int[] nums, int target) {
            int left = 0;
            int right = nums.length;
            int mid = 0;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (nums[mid] > target) {
                    right = mid - 1;
                } else if (nums[mid] < target) {
                    left = mid + 1;
                } else {
                    if (mid == 0 || nums[mid - 1] != target) {
                        return mid;
                    }
                    right = mid - 1;
                }
            }
            return -1;
        }

        private int rightBound(int[] nums, int target) {
            int left = 0;
            int right = nums.length;
            int mid = 0;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (nums[mid] > target) {
                    right = mid - 1;
                } else if (nums[mid] < target) {
                    left = mid + 1;
                } else {
                    if (mid == nums.length- 1 || nums[mid + 1] != target) {
                        return mid;
                    }
                    left = mid + 1;
                }
            }
            return -1;
        }
    }

//runtime_error:Line 22: java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0
//last_testcase:[] 0
