    class Solution {
        public int search(int[] nums, int target) {
            int low = 0;
            int high = nums.length - 1;
            int mid = 0;
            while (low <= high) {
                mid = low + (high - low) / 2;
                if (nums[mid] == target) {
                    return mid;
                }
                if (nums[low] <= nums[mid]) {
                    // [low, mid]区间是有序的
                    // [mid + 1, high] 存在target
                    if (nums[low] <= target && target <= nums[mid]) {
                        System.out.println("1**" + nums[mid]);
                        high = mid - 1;
                    } else {
                        low = mid + 1;
                        System.out.println("2**" + low);

                    }
                } else if (nums[mid] <= nums[high]) {
                    if (nums[mid] >= target && target <= nums[high]) {
                        System.out.println("1##" + nums[mid]);
                        low = mid + 1;
                    } else {
                        high = mid - 1;
                        System.out.println("2##" + high);
                    }
                }
            }
            return -1;
        }
    }

//total_testcases:196
//total_correct:162
//input_formatted:[5,1,3], 3
//expected_output:2
//code_output:-1
